// Generated by view binder compiler. Do not edit!
package com.example.tableorder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tableorder.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DonationsRowLayoutBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView donatedFoodItem;

  @NonNull
  public final TextView donatedFoodItemDescription;

  @NonNull
  public final ImageView donorLocation;

  @NonNull
  public final ImageView donorPhoneNumber;

  @NonNull
  public final TextView receiveTextView;

  private DonationsRowLayoutBinding(@NonNull MaterialCardView rootView,
      @NonNull TextView donatedFoodItem, @NonNull TextView donatedFoodItemDescription,
      @NonNull ImageView donorLocation, @NonNull ImageView donorPhoneNumber,
      @NonNull TextView receiveTextView) {
    this.rootView = rootView;
    this.donatedFoodItem = donatedFoodItem;
    this.donatedFoodItemDescription = donatedFoodItemDescription;
    this.donorLocation = donorLocation;
    this.donorPhoneNumber = donorPhoneNumber;
    this.receiveTextView = receiveTextView;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DonationsRowLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DonationsRowLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.donations_row_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DonationsRowLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.donatedFoodItem;
      TextView donatedFoodItem = ViewBindings.findChildViewById(rootView, id);
      if (donatedFoodItem == null) {
        break missingId;
      }

      id = R.id.donatedFoodItemDescription;
      TextView donatedFoodItemDescription = ViewBindings.findChildViewById(rootView, id);
      if (donatedFoodItemDescription == null) {
        break missingId;
      }

      id = R.id.donorLocation;
      ImageView donorLocation = ViewBindings.findChildViewById(rootView, id);
      if (donorLocation == null) {
        break missingId;
      }

      id = R.id.donorPhoneNumber;
      ImageView donorPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (donorPhoneNumber == null) {
        break missingId;
      }

      id = R.id.receiveTextView;
      TextView receiveTextView = ViewBindings.findChildViewById(rootView, id);
      if (receiveTextView == null) {
        break missingId;
      }

      return new DonationsRowLayoutBinding((MaterialCardView) rootView, donatedFoodItem,
          donatedFoodItemDescription, donorLocation, donorPhoneNumber, receiveTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
